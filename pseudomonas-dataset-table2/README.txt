For this analysis, we use query phage sequences derived from:

Fiedoruk, Krzysztof, Magdalena Zakrzewska, Tamara Daniluk, Ewelina Piktel, Sylwia Chmielewska, and Robert Bucki. 2020. “Two Lineages of Pseudomonas Aeruginosa Filamentous Phages: Structural Uniformity over Integration Preferences.” Genome Biology and Evolution 12 (10): 1765–81.
https://academic.oup.com/gbe/article/12/10/1765/5870832

From their Supplementary Materials, acquire the accession IDs of source bacterial genomes and coordinates for each annotated prophage. These can also be found in phage_data_vs015_removed.csv, attached in this directory. vs015 is our label for a prophage integration that is ~70kbp in length, which we removed as it demanded large amounts of RAM to submit as a query sequence.

Use the bacterial genome accession IDs to download their genomes from the Pseudomonas Genome Database (v21.1, https://www.pseudomonas.com/) however you like. Store all bacterial genome sequences in one multi-FASTA file. We named ours phage_source_bacteria.fasta. Then run the following, which will extract each prophage sequence from the source bacterial genomes:
`awk -F, 'NR>1 {cmd="esl-sfetch -c " $5 " -n "$8" bacterial_seq/4-4-23_phage_source_bacteria.fasta "$2; system(cmd)}' 4-11-23_vs015_removed.csv >> phage_seq/4-11-23_vs015_removed.fasta`

Once we have the prophage sequences, download all complete Pseudomonas spp. genomes from the Pseudomonas Genome Database (v21.1). Store each genome as an individual .fna file in a directory containing only the bacterial genome sequences.
https://www.pseudomonas.com/strain/download

Some of the file names cause issues with Nextflow, so we change them to remove brackets:
`mv \[Pseudomonas\]_zhaodongensis_LQ01-5_13606.fna Pseudomonas_zhaodongensis_LQ01-5_13606.fna
mv \[Pseudomonas\]_zhaodongensis_A252_13605.fna Pseudomonas_zhaodongensis_A252_13605.fna`

Also, 3 of the genome records contained no sequences at all. One, Pseudomonas_fluorescens_A506_15054.fna, is a duplicate of Pseudomonas_fluorescens_A506_168.fna, which we've already downloaded, so we just remove the empty, redundant file.
`rm Pseudomonas_fluorescens_A506_15054.fna
curl -OJX GET "https://api.ncbi.nlm.nih.gov/datasets/v2alpha/genome/accession/GCF_024494485.1/download?include_annotation_type=GENOME_FASTA&filename=Pseudomonas_asiatica_MD9_14883.fna.zip" -H "Accept: application/zip"
curl -OJX GET "https://api.ncbi.nlm.nih.gov/datasets/v2alpha/genome/accession/GCF_004124255.1/download?include_annotation_type=GENOME_FASTA&filename=Candidatus_Pseudomonas_adelgestsugas_isolate_HWA_ENA_7752.fna.zip" -H "Accept: application/zip"`

Unzip the two replacement records from NCBI and copy their .fna files into the directory with the other bacterial genome sequences.

Now that we have query phage and target bacterial genomes, we can run VIBES. To facilitate analysis of the resource usage of each component of the pipeline, we ran VIBES three times, each on a different component. Parameters files, the config file (with some potentially sensitive information removed), and the advanced_options.config file used are included in this directory. All searches were conducted on an HPC system with SLURM and using the VIBES docker container through Singularity:
Integration Detection:
`nextflow -log integration_detection.log run workflow.nf -profile ua_hpc -params-file params/integration_detection.yaml -with-report integration_detection_report.html -w /path/to/nextflow/workdir/work/`

Viral Gene Annotation:
`nextflow -log viral_gene_annotation.log run workflow.nf -params-file params/viral_gene_annotation.yaml -profile ua_hpc -with-report viral_gene_annotation_report.html -w /path/to/nextflow/workdir/work/`

Prokka Annotation:
`nextflow -log prokka_annotation.log run workflow.nf -params-file params/prokka-annotation.yaml -w /path/to/nextflow/workdir/work/ -profile ua_hpc -with-report prokka_annotation_report.html`

Note that the above were executed in a screen session to keep them running even if I logged off the HPC (tmux will also work).

The values used in Table 2 were acquired from the report files generated by the Nextflow run commands.
